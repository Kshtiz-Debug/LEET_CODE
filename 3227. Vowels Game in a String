Alice and Bob are playing a game on a string.

You are given a string s, Alice and Bob will take turns playing the following game where Alice starts first:

    On Alice's turn, she has to remove any non-empty 

from s that contains an odd number of vowels.
On Bob's turn, he has to remove any non-empty

    from s that contains an even number of vowels.

The first player who cannot make a move on their turn loses the game. We assume that both Alice and Bob play optimally.

Return true if Alice wins the game, and false otherwise.

The English vowels are: a, e, i, o, and u.



code:




class Solution:
    def doesAliceWin(self, s: str) -> bool:
        vowels=['a','e','i','o','u']
        count=0
        for i in s:
            if i in vowels:
                count+=1
        if count==0:
            return False
        return True



----------------------------------------------------------------------------------------------------------------




approach:


So if you give it a thought then you will realize that Alice will win in every case until n unless the number of vowels inside the string 
are 0. So giving a sepearte condition for that .
How will Alice win in all other cases ?

Well if the number of vowels inside the string are odd then he can simply remove all the vowels in a go coz he has been given an upper
hand. Once all the vowels have been removed then Bob doesn't even get the chance to play and Alice wins the game < ...UNETHICALLY...>
But well want Alice to win , so we do what we want.

Well for the other case
if the number of vowels are even then as also the Alice will simply remove remove the vowels leaving only one vowel left and Bob has 
to remove even number of vowels , So again Alice wins 


ThankYou ~ ~ ~ ~
