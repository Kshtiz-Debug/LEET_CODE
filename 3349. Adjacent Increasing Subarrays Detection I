Given an array nums of n integers and an integer k, determine whether there exist two adjacent

of length k such that both subarrays are strictly increasing. Specifically, check if there are two subarrays starting at indices a and b (a < b), where:

    Both subarrays nums[a..a + k - 1] and nums[b..b + k - 1] are strictly increasing.
    The subarrays must be adjacent, meaning b = a + k.

Return true if it is possible to find two such subarrays, and false otherwise.


code :

class Solution:
    def hasIncreasingSubarrays(self, nums: List[int], k: int) -> bool:
        sum=0
        def check(n):
            for i in range(len(n)-1):
                if n[i]>=n[i+1]:
                    return False
            return True
        for i in range(len(nums)+1-2*k):
            a=check(nums[i:i+k])
            b=check(nums[i+k:i+2*k])
            if a and b:
                return True
        return False


        

            
                

