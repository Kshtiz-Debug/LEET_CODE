There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly.

Given a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard.



code:


class Solution:
    def canBeTypedWords(self, text: str, brokenLetters: str) -> int:
        s=text.split(" ")
        b=[]
        count=0
        for i in brokenLetters:
            b.append(i)
        for i in s:
            for j in i:
                if j in b:
                    break
            else:
                count+=1
        return count





------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


approach:

Well the else statement here is ...there's a special feature where **for loops can also have an else block**
And this else block runs only if the for loop completes without hitting a break.



